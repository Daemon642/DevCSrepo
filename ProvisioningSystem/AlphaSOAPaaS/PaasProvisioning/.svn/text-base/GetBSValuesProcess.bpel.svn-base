<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Feb 20 11:43:17 EST 2014
  Author:  oracle
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="GetBSValuesProcess"
               targetNamespace="http://xmlns.oracle.com/AlphaSOAPaaS/PaasProvisioning/GetBSValuesProcess"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.oracle.com/AlphaSOAPaaS/PaasProvisioning/GetBSValuesProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/AlphaSOAPaaS/PaasProvisioning/GetBSValues"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/GetBSValues"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="getbsvaluesprocess_client" partnerLinkType="client:GetBSValuesProcess" myRole="GetBSValuesProcessProvider"/>
    <partnerLink name="GetBSValues" partnerLinkType="ns1:GetBSValues_plt"
                 partnerRole="GetBSValues_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:GetBSValuesProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:GetBSValuesProcessResponseMessage"/>
    <variable name="InvokeGetBSValues_InputVariable"
              messageType="ns1:GetBSValuesSelect_inputParameters"/>
    <variable name="InvokeGetBSValues_OutputVariable"
              messageType="ns1:PBusinessValuesCollection_msg"/>
    <variable name="nodeCount" type="xsd:int"/>
    <variable name="loopCount" type="xsd:int"/>
    <variable name="xmlPathName" type="xsd:string"/>
    <variable name="xmlPathVal" type="xsd:string"/>
    <variable name="bsName" type="xsd:string"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in GetBSValuesProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="getbsvaluesprocess_client" portType="client:GetBSValuesProcess" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="AssignInput">
      <copy>
        <from variable="inputVariable" part="payload"
              query="/client:process/client:BusinessServiceId"/>
        <to variable="InvokeGetBSValues_InputVariable"
            part="GetBSValuesSelect_inputParameters"
            query="/ns2:GetBSValuesSelect_businessServiceIdInputParameters/ns2:businessServiceId"/>
      </copy>
    </assign>
    <invoke name="InvokeGetBSValues" bpelx:invokeAsDetail="no"
            inputVariable="InvokeGetBSValues_InputVariable"
            outputVariable="InvokeGetBSValues_OutputVariable"
            partnerLink="GetBSValues" portType="ns1:GetBSValues_ptt"
            operation="GetBSValuesSelect"/>
    <assign name="InitLoop">
      <copy>
        <from expression="count(bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection','/ns2:PBusinessValuesCollection/ns2:PBusinessValues'))"/>
        <to variable="nodeCount"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="loopCount"/>
      </copy>
    </assign>
    <while name="While1"
           condition="bpws:getVariableData('loopCount') &lt; bpws:getVariableData('nodeCount')">
      <sequence name="Sequence1">
        <assign name="incLoop">
          <copy>
            <from expression="bpws:getVariableData('loopCount') + 1"/>
            <to variable="loopCount"/>
          </copy>
          <copy>
            <from expression="concat ('/ns2:PBusinessValuesCollection/ns2:PBusinessValues[',bpws:getVariableData('loopCount'),']/ns2:name')"/>
            <to variable="xmlPathName"/>
          </copy>
          <copy>
            <from expression="concat('/ns2:PBusinessValuesCollection/ns2:PBusinessValues[',bpws:getVariableData('loopCount'),']/ns2:val')"/>
            <to variable="xmlPathVal"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathName'))"/>
            <to variable="bsName"/>
          </copy>
        </assign>
        <switch name="Switch1">
          <case condition="contains(bpws:getVariableData('bsName'), 'InstanceName')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[InstanceName]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignInstanceName">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:instanceName"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'MWaaS')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[MWaaS]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignMWaaS">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:MWaaS"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'username')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[username]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignUsername">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:username"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'ApplicationURL')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[ApplicationURL]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignApplicationURL">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:applicationURL"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'ConsoleURL')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[ConsoleURL]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignConsoleURL">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:consoleURL"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'AppsLoginURL')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[AppsLoginURL]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignAppsLogin">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:appsLoginURL"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), '_DB')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[DB]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignDB">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:dbIP"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'AdminServer')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[WLS]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignWLS">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:wlsIP"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'soa_server')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[SOA]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignSOA">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:SOAIP"/>
              </copy>
            </assign>
          </case>
          <case condition="contains(bpws:getVariableData('bsName'), 'ConnectString')">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">
                  <![CDATA[ConnectString]]>
                </bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="AssignConnectString">
              <copy>
                <from expression="bpws:getVariableData('InvokeGetBSValues_OutputVariable','PBusinessValuesCollection',bpws:getVariableData('xmlPathVal'))"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:connectString"/>
              </copy>
            </assign>
          </case>
          <otherwise>
            <empty name="Empty1"/>
          </otherwise>
        </switch>
      </sequence>
    </while>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="getbsvaluesprocess_client" portType="client:GetBSValuesProcess" operation="process" variable="outputVariable"/>
  </sequence>
</process>